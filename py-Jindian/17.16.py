'''
[面试题 17.16. 按摩师 - 力扣（LeetCode）](https://leetcode-cn.com/problems/the-masseuse-lcci)

一个有名的按摩师会收到源源不断的预约请求，每个预约都可以选择接或不接。在每次预约服务之间要有休息时间，因此她不能接受相邻的预约。给定一个预约请求序列，替按摩师找到最优的预约集合（总预约时间最长），返回总的分钟数。

注意：本题相对原题稍作改动

 

示例 1：

输入： [1,2,3,1]
输出： 4
解释： 选择 1 号预约和 3 号预约，总时长 = 1 + 3 = 4。


示例 2：

输入： [2,7,9,3,1]
输出： 12
解释： 选择 1 号预约、 3 号预约和 5 号预约，总时长 = 2 + 9 + 1 = 12。


示例 3：

输入： [2,1,4,5,3,1,1,3]
输出： 12
解释： 选择 1 号预约、 3 号预约、 5 号预约和 8 号预约，总时长 = 2 + 4 + 3 + 3 = 12。

思路非常简单. 就是动态规划, max(当前的nums[i] + 上上轮的最大值, 上轮最大值)

有点像那个小偷偷东西的题目.

'''

class Solution:
    def massage(self, nums) -> int:
        ### 如果长度不够, 直接GG了.
        if len(nums) == 0:
            return 0
        ### 如果长度是够的:
        m = -1
        dp0, dp1 = 0, nums[0]
        for i in range(1, len(nums)):
            m = max(nums[i] + dp0, dp1)
            dp0 = dp1
            dp1 = m

        return dp1

print(
    Solution().massage(
        [1,2,3,1]
    )
)
